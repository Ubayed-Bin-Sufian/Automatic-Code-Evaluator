[        
    {
        "Question1" : "What is the median of the numbers 1, 3, 3, 6, 7, 8, 9?",
        "Hint" : "Arrange the numbers in order and find the middle one.",
        "SampleCode" : "numbers = [1, 3, 3, 6, 7, 8, 9] \nnumbers.sort() \nmedian = numbers[len(numbers) // 2] \nprint(median)",
        "Answer" : "6",
        "TestCases" : [
            {
                "input": [1, 3, 3, 6, 7, 8, 9],
                "expected_output": 6
            },
            {
                "input": [1, 2, 3, 4, 5, 6],
                "expected_output": 3.5
            },
            {
                "input": [5],
                "expected_output": 5
            },
            {
                "input": [7, 7, 7, 7, 7],
                "expected_output": 7
            },
            {
                "input": [-5, -1, -3, -2, -4],
                "expected_output": -3
            }
        ]
    },
    {
        "Question2" : "What is the mean (average) of the following set of numbers: 4, 8, 15, 16, 23, 42?",
        "Hint" : "Add up all the numbers and divide by the number of numbers.",
        "SampleCode" : "numbers = [4, 8, 15, 16, 23, 42] \nmean = sum(numbers) / len(numbers) \nprint(mean)",
        "Answer" : "18.0",
        "TestCases": [
            {
                "input": [4, 8, 15, 16, 23, 42],
                "expected_output": 18.0
            },
            {
                "input": [-5, -10, -15, -20],
                "expected_output": -12.5
            },
            {
                "input": [-5, 0, 5, 10, 15],
                "expected_output": 5.0
            },
            {
                "input": [42],
                "expected_output": 42.0
            },
            {
                "input": [0, 0, 0, 0],
                "expected_output": 0.0
            },
            {
                "input": [1.5, 2.5, 3.5, 4.5],
                "expected_output": 3.0
            }
        ]
    },
    {
        "Question3" : "How do you find the mode of the following set of numbers: 1, 2, 2, 3, 4, 4, 4, 5?",
        "Hint" : "The mode is the number that appears most frequently.",
        "SampleCode" : "from collections import Counter \nnumbers = [1, 2, 2, 3, 4, 4, 4, 5] \nmode = Counter(numbers).most_common(1)[0][0] \nprint(mode)",
        "Answer" : "4",
        "TestCases": [
            {
                "input": [1, 2, 2, 3, 4, 4, 4, 5],
                "expected_output": 4
            },
            {
                "input": [1, 1, 2, 2, 3, 3],
                "expected_output": [1, 2, 3]
            },
            {
                "input": [7, 7, 7, 7, 7],
                "expected_output": 7
            },
            {
                "input": [1, 2, 3, 4, 5],
                "expected_output": [1, 2, 3, 4, 5]
            },
            {
                "input": [-1, -1, -2, -3, -3, -3],
                "expected_output": -3
            },
            {
                "input": [1.1, 2.2, 2.2, 3.3, 4.4, 4.4],
                "expected_output": [2.2, 4.4]
            }
        ]
    },
    {
        "Question4" : " What is a histogram and how is it used?",
        "Hint" : "A histogram is a graphical representation of data using bars of different heights.",
        "SampleCode" : "import matplotlib.pyplot as plt \ndata = [1, 2, 2, 3, 4, 4, 4, 5] \nplt.hist(data, bins=5) \nplt.xlabel('Value') \nplt.ylabel('Frequency') \nplt.title('Histogram') \nplt.show()",
        "Answer": "A histogram is a graphical representation of data using bars of different heights. It is used to show the frequency distribution of a set of data. Each bar represents the frequency (number of occurrences) of data points within a specific range (bin). Histograms are useful for visualizing the shape of the data distribution and identifying patterns or outliers.",
        "TestCases": [
            {
                "input": [1, 2, 3, 4, 5],
                "bins": 5,
                "expected_output": "Each bar should have a height of 1, indicating each value appears once."
            },
            {
                "input": [1, 1, 1, 1, 1],
                "bins": 1,
                "expected_output": "A single bar with a height of 5, indicating all values fall within one bin."
            },
            {
                "input": [2, 2, 2, 3, 3, 4, 4, 4, 4],
                "bins": 3,
                "expected_output": "Bars of different heights reflecting the frequency of 2 (3 times), 3 (2 times), and 4 (4 times)."
            },
            {
                "input": [1.5, 2.5, 2.5, 3.5, 4.5, 4.5],
                "bins": 4,
                "expected_output": "Bars representing the frequency of values around the float numbers, with appropriate bin widths."
            },
            {
                "input": [-3, -2, -2, -1, 0, 1, 2],
                "bins": 4,
                "expected_output": "Bars representing the frequency of negative and positive values, distributed among the bins."
            },
            {
                "input": [1, 10, 20, 30, 40, 50],
                "bins": 5,
                "expected_output": "Bars showing sparse distribution of values across a wide range, with each bin containing few or one value."
            }
        ]
    },
    {
        "Question5" : "What is a scatter plot and when would you use it?",
        "Hint" : " A scatter plot shows the relationship between two variables.",
        "SampleCode" : "import matplotlib.pyplot as plt \nx = [1, 2, 3, 4, 5] \ny = [2, 4, 6, 8, 10] \nplt.scatter(x, y) \nplt.xlabel('X-axis') \nplt.ylabel('Y-axis') \nplt.title('Scatter Plot') \nplt.show()",
        "Answer": "A scatter plot is a type of data visualization that displays values for two variables as a collection of points. Each point represents an observation in the dataset and is positioned according to its values on the two axes (x and y). Scatter plots are used to observe relationships between variables, identify correlations, and detect outliers.",
        "TestCases": [
            {
                "input_x": [1, 2, 3, 4, 5],
                "input_y": [2, 4, 6, 8, 10],
                "expected_output": "Points should form a straight line with a positive slope, indicating a positive correlation."
            },
            {
                "input_x": [1, 2, 3, 4, 5],
                "input_y": [10, 8, 6, 4, 2],
                "expected_output": "Points should form a straight line with a negative slope, indicating a negative correlation."
            },
            {
                "input_x": [1, 2, 3, 4, 5],
                "input_y": [5, 3, 4, 2, 1],
                "expected_output": "Points should be scattered randomly, indicating no apparent correlation."
            },
            {                
                "input_x": [1, 2, 2, 3, 4, 4, 5],
                "input_y": [5, 3, 3, 4, 2, 2, 1],
                "expected_output": "Points should form visible clusters, indicating groupings in the data."
            },
            {                
                "input_x": [1, 2, 3, 4, 100],
                "input_y": [2, 4, 6, 8, 1000],
                "expected_output": "One point should be far away from the others, indicating an outlier."
            }
        ]
    },
    {
        "Question6" : "What does the term 'correlation' mean in data science?",
        "Hint" : "Correlation measures how two variables move together.",
        "SampleCode" : "import numpy as np \nx = [1, 2, 3, 4, 5] \ny = [2, 4, 6, 8, 10] \ncorrelation = np.corrcoef(x, y)[0, 1] \nprint(correlation)",
        "Answer": "In data science, correlation measures the strength and direction of the relationship between two variables. It indicates how one variable changes as the other variable changes. The correlation coefficient, typically denoted as r, ranges from -1 to 1, where 1 indicates a perfect positive correlation (as one variable increases, the other variable also increases), -1 indicates a perfect negative correlation (as one variable increases, the other variable decreases), and 0 indicates no correlation (there is no predictable relationship between the variables).",
        "TestCases": [
            {
                "input_x": [1, 2, 3, 4, 5],
                "input_y": [2, 4, 6, 8, 10],
                "expected_output": 1.0
            },
            {
                "input_x": [1, 2, 3, 4, 5],
                "input_y": [10, 8, 6, 4, 2],
                "expected_output": -1.0
            },
            {
                "input_x": [1, 2, 3, 4, 5],
                "input_y": [5, 3, 4, 2, 1],
                "expected_output": 0.0
            },
            {
                "input_x": [1, 2, 3, 4, 5],
                "input_y": [1, 2, 2, 3, 5],
                "expected_output": 0.9
            },
            {
                "input_x": [1, 2, 3, 4, 5],
                "input_y": [5, 4, 4, 2, 1],
                "expected_output": -0.9
            },
            {
                "input_x": [10, 20, 30, 40, 50],
                "input_y": [1, 5, 3, 8, 7],
                "expected_output": 0.2
            }
        ]
    },
    {
        "Question7" : "What is the difference between supervised and unsupervised learning?",
        "Hint" : "Supervised learning uses labeled data, while unsupervised learning uses unlabeled data.",
        "SampleCode": "from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.datasets import make_regression\n\n# Generate a random regression problem\nX, y = make_regression(n_samples=100, n_features=1, noise=0.1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Train a linear regression model\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# Predict and print the results\npredictions = model.predict(X_test)\nprint(\"Supervised Learning Predictions:\", predictions)\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.datasets import make_blobs\n\n# Generate sample data with 3 clusters\nX, _ = make_blobs(n_samples=100, centers=3, n_features=2, random_state=42)\n\n# Train a KMeans clustering model\nkmeans = KMeans(n_clusters=3, random_state=42)\nkmeans.fit(X)\n\n# Print the cluster centers\nprint(\"Unsupervised Learning Cluster Centers:\", kmeans.cluster_centers_)",
        "Answer": "Supervised learning involves training a model on labeled data, where the input data comes with corresponding output labels. The model learns to map inputs to outputs based on this training. Unsupervised learning, on the other hand, involves training a model on data without labeled responses. The model tries to identify patterns and structure in the input data on its own, often through clustering or dimensionality reduction techniques.",
        "TestCases": [
            {
                "input": {
                    "X": [[1], [2], [3], [4], [5]],
                    "y": [2, 4, 6, 8, 10]
                },
                "expected_output": "A linear model that predicts values close to [2, 4, 6, 8, 10] when provided with inputs [1, 2, 3, 4, 5]."
            },
            {
                "input": {
                    "X": [[1, 2], [1, 3], [2, 2], [8, 8], [8, 9], [9, 8]]
                },
                "expected_output": "Clusters with centers close to the mean of the input data points, e.g., [[1.5, 2.33], [8.33, 8.33]]."
            },
            {
                "input": {
                    "X_train": [[1], [2], [3], [4], [5]],
                    "y_train": [2, 4, 6, 8, 10],
                    "X_test": [[6]]
                },
                "expected_output": "A prediction close to 12 for the input [6] using the trained linear model."
            },
            {
                "input": {
                    "X_train": [[1, 2], [1, 3], [2, 2], [8, 8], [8, 9], [9, 8]],
                    "X_new": [[1, 1], [9, 9]]
                },
                "expected_output": "Cluster assignments for the new data points [[1, 1], [9, 9]] based on the learned clusters."
            }
        ]
    },
    {
        "Question8" : "How would you generate a list of 10 random numbers between 1 and 100?",
        "Hint" : "Use the random module in Python.",
        "SampleCode" : "import random \nrandom_numbers = [random.randint(1, 100) for _ in range(10)] \nprint(random_numbers)",
        "Answer" : "[43, 35, 22, 47, 31, 86, 76, 21, 58, 46]",
        "TestCases": [
            {
                "input": null,
                "expected_output": 10,
                "function": "len(random_numbers)"
            },
            {
                "input": null,
                "expected_output": true,
                "function": "all(1 <= num <= 100 for num in random_numbers)"
            },
            {
                "input": null,
                "expected_output": true,
                "function": "all(isinstance(num, int) for num in random_numbers)"
            },
            {
                "input": [43, 35, 22, 47, 31, 86, 76, 21, 58, 46],
                "expected_output": true,
                "function": "len(set(random_numbers)) == 10"
            },
            {
                "input": null,
                "expected_output": true,
                "function": "100 <= sum(random_numbers) <= 1000"
            }
        ]
    },
    {
        "Question9" : "What is a DataFrame in pandas?",
        "Hint" : "A DataFrame is a 2-dimensional labeled data structure with columns of potentially different types.",
        "SampleCode" : "import pandas as pd \ndata = {'Name': ['Aarav', 'Sanya', 'Rohan'], 'Age': [24, 27, 22]} \ndf = pd.DataFrame(data) \nprint(df)",
        "Answer" : "A DataFrame is a 2-dimensional labeled data structure with columns of potentially different types.",
        "TestCases": [
            {
                "input": null,
                "expected_output": "<class 'pandas.core.frame.DataFrame'>",
                "function": "type(df)"
            },
            {
                "input": null,
                "expected_output": "Index(['Name', 'Age'], dtype='object')",
                "function": "df.columns"
            },
            {
                "input": null,
                "expected_output": "{'Name': 'object', 'Age': 'int64'}",
                "function": "df.dtypes.apply(str).to_dict()"
            },
            {
                "input": null,
                "expected_output": "(3, 2)",
                "function": "df.shape"
            },
            {
                "input": null,
                "expected_output": "['Aarav', 'Sanya', 'Rohan']",
                "function": "df['Name'].tolist()"
            },
            {
                "input": null,
                "expected_output": "[24, 27, 22]",
                "function": "df['Age'].tolist()"
            }
        ]
    },
    {
        "Question10" : "How do you find the sum of all values in a list?",
        "Hint" : "Use the sum() function.",
        "SampleCode" : "numbers = [1, 2, 3, 4, 5] \ntotal_sum = sum(numbers) \nprint(total_sum)",
        "Answer" : "15",
        "TestCases": [
            {
                "input": [1, 2, 3, 4, 5],
                "expected_output": 15,
                "function": "sum(input)"
            },
            {
                "input": [-1, -2, -3, -4, -5],
                "expected_output": -15,
                "function": "sum(input)"
            },
            {
                "input": [-1, 2, -3, 4, -5],
                "expected_output": -3,
                "function": "sum(input)"
            },
            {
                "input": [0, 0, 0, 0, 0],
                "expected_output": 0,
                "function": "sum(input)"
            },
            {
                "input": [],
                "expected_output": 0,
                "function": "sum(input)"
            },
            {
                "input": [42],
                "expected_output": 42,
                "function": "sum(input)"
            }
        ]
    }       
]